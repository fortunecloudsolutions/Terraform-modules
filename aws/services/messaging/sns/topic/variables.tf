variable "region" {
  description = "aws region"
  type        = string
}

variable "vault_addr" {
  description = "vault address"
  type        = string
}

variable "vault_token" {
  description = "vault token"
  type        = string
}

variable "lease_seconds" {
  description = "The default TTL for credentials issued by this backend."
  type        = string
}

variable "backend" {
  description = "The path the AWS secret backend is mounted at, with no leading or trailing /s."
  type        = string
}

variable "role" {
  description = "The name to identify this role within the backend. Must be unique within the backend."
  type        = string

}

variable "name" {
  type        = string
  description = "(Optional) The friendly name for the SNS topic. By default generated by Terraform."
}

variable "display_name" {
  type        = string
  description = "(Optional) The display name for the SNS topic."
}

variable "policy" {
  type        = string
  description = "(Optional)The fully-formed AWS policy as JSON. This policy defines who can access your topic. By default, only the topic owner can publish or subscribe to the topic."
  default     = null
}

variable "delivery_policy_https" {
  type        = string
  description = "(Optional)The SNS delivery policy. The policy defines how Amazon SNS retries failed deliveries to HTTP/S endpoints."
  default     = null
}

variable "kms_master_key_id" {
  type        = string
  description = "(Optional) The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK."
  default     = null
}

variable "app_status_logging" {
  type = object({
    success_feedback_role_arn    = string # The IAM role permitted to receive success feedback for this topic
    success_feedback_sample_rate = number # Percentage of success to sample
    failure_feedback_role_arn    = string # IAM role for failure feedback
  })
  description = "(Optional) These settings configure the logging of message delivery status to CloudWatch Logs for Platform application endpoint"
  default     = null
}

variable "http_status_logging" {
  type = object({
    success_feedback_role_arn    = string # The IAM role permitted to receive success feedback for this topic
    success_feedback_sample_rate = number # Percentage of success to sample
    failure_feedback_role_arn    = string # IAM role for failure feedback
  })
  description = "(Optional) These settings configure the logging of message delivery status to CloudWatch Logs for HTTP"
  default     = null
}

variable "lambda_status_logging" {
  type = object({
    success_feedback_role_arn    = string # The IAM role permitted to receive success feedback for this topic
    success_feedback_sample_rate = number # Percentage of success to sample
    failure_feedback_role_arn    = string # IAM role for failure feedback
  })
  description = "(Optional) These settings configure the logging of message delivery status to CloudWatch Logs for lambda"
  default     = null
}

variable "sqs_status_logging" {
  type = object({
    success_feedback_role_arn    = string # The IAM role permitted to receive success feedback for this topic
    success_feedback_sample_rate = number # Percentage of success to sample
    failure_feedback_role_arn    = string # IAM role for failure feedback
  })
  description = "(Optional) These settings configure the logging of message delivery status to CloudWatch Logs for SQS"
  default     = null
}

variable "tags" {
  type        = map(any)
  description = "(Optional) Key-value map of resource tags"
  default     = {}
}